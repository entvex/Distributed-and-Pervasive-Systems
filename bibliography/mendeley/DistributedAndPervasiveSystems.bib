Automatically generated by Mendeley Desktop 1.18
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@article{Pantel2002,
abstract = {A major problem of network-based multiplayer games (and other distributed virtual environments) is caused by the network transmission delay. This delay leads to inconsistency and other problems. Dead reckoning is often used to reduce the effects of network induced delays and losses by applying prediction means. The quality of the prediction and, hence, the consistency of the distributed game, depends on the difference between the real and the predicted position of some objects. In this paper we discuss prediction methods for games and study their usefulness in regard to different game types (genre) like Sport, 3D-Action and racing games. Using implementations, the methods are evaluated experimentally.},
author = {Pantel, Lothar and Wolf, Lars C.},
doi = {10.1145/566500.566512},
file = {:C$\backslash$:/Users/Entvex/Desktop/pantelwolf02b.pdf:pdf},
isbn = {1581134932},
journal = {Proceedings of the 1st workshop on Network and system support for games  - NETGAMES '02},
pages = {79--84},
title = {{On the suitability of dead reckoning schemes for games}},
url = {http://portal.acm.org/citation.cfm?doid=566500.566512},
year = {2002}
}
@article{Lopez-Vega2013,
abstract = {The OMG DDS (Data Distribution Service) standard specifies a middleware for distributing real-time data using a publish-subscribe data-centric approach. Until now, DDS systems have been restricted to a single and isolated DDS domain, normally deployed within a single multicast-enabled LAN. As systems grow larger, the need to interconnect different DDS domains arises. In this paper, we consider the problem of communicating disjoint data-spaces that may use different schemas to refer to similar information. In this regard, we propose a DDS interconnection service capable of bridging DDS domains as well as adapting between different data schemas. A key benefit of our approach is that is compliant with the latest OMG specifications, thus the proposed service does not require any modifications to DDS applications. The paper identifies the requirements for DDS data-spaces interconnection, presents an architecture that responds to those requirements, and concludes with experimental results gathered on our prototype implementation. We show that the impact of the service on the communications performance is well within the acceptable limits for most real-world uses of DDS (latency overhead is of the order of hundreds of microseconds). Reported results also indicate that our service interconnects remote data-spaces efficiently and reduces the network traffic almost N times, with N being the number of final data subscribers. {\textcopyright} 2012 Elsevier Inc. All rights reserved.},
author = {Lopez-Vega, Jose M. and Povedano-Molina, Javier and Pardo-Castellote, Gerardo and Lopez-Soler, Juan M.},
doi = {10.1016/j.jss.2012.07.033},
file = {::},
issn = {01641212},
journal = {Journal of Systems and Software},
keywords = {Bridging,Data Distribution Service,Interoperability,Middleware,Network communications},
number = {1},
pages = {108--124},
publisher = {Elsevier Inc.},
title = {{A content-aware bridging service for publish/subscribe environments}},
url = {http://dx.doi.org/10.1016/j.jss.2012.07.033},
volume = {86},
year = {2013}
}
@book{Fokkink1965,
abstract = {A comprehensive guide to distributed algorithms that emphasizes examples and exercises rather than mathematical argumentation. This book offers students and researchers a guide to distributed algorithms that emphasizes examples and exercises rather than the intricacies of mathematical models. It avoids mathematical argumentation, often a stumbling block for students, teaching algorithmic thought rather than proofs and logic. This approach allows the student to learn a large number of algorithms within a relatively short span of time. Algorithms are explained through brief, informal descriptions, illuminating examples, and practical exercises. The examples and exercises allow readers to understand algorithms intuitively and from different perspectives. Proof sketches, arguing the correctness of an algorithm or explaining the idea behind fundamental results, are also included. An appendix offers pseudocode descriptions of many algorithms. Distributed algorithms are performed by a collection of computers that send messages to each other or by multiple software threads that use the same shared memory. The algorithms presented in the book are for the most part "classics," selected because they shed light on the algorithmic design of distributed systems or on key issues in distributed computing and concurrent programming. Distributed Algorithms can be used in courses for upper-level undergraduates or graduate students in computer science, or as a reference for researchers in the field.},
author = {Fokknik, Wan},
file = {::},
isbn = {9780262026772},
issn = {1477-4054},
pages = {248},
pmid = {18356204},
publisher = {The MIT Press (December 6, 2013)},
title = {{Distributed Algorithms. An Intuitive Approach}},
year = {2013}
}
